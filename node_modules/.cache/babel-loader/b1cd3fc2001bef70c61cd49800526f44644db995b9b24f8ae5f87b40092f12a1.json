{"ast":null,"code":"var _jsxFileName = \"/Users/seth/turing_work/3mod/react-sandbox/src/components/TicTacToe.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Board from \"./ticTacToe/Board\";\nimport checkBoard from \"../lib/ticTacToe\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TicTacToe() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(0)]);\n  const [winning3, setWinners] = useState([]);\n  const [winner, declareWinner] = useState(null);\n  const currentSquares = history[history.length - 1];\n  const playersTurn = history.length % 2 ? \"X\" : \"O\";\n  const isDraw = history.length > 9;\n  const statusMessage = winner ? `Player - ${winner} - Wins!` : isDraw ? \"GAME OVER - It's a draw\" : `Player - ${playersTurn}`;\n  function handlePlay(i) {\n    if (winningSquares.length || currentSquares[i]) return;\n    const nextSquares = [...currentSquares];\n    nextSquares[i] = history.length % 2 ? 1 : -1;\n    console.log(nextSquares);\n    const winning3 = checkBoard(nextSquares);\n    if (winner3) {\n      setWinners(winner);\n      declareWinner();\n    }\n    setHistory([...history, nextSquares]);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      squares: currentSquares,\n      onPlay: handlePlay,\n      winning3: winning3,\n      isComplete: winner || isDraw,\n      playersTurn: playersTurn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TicTacToe, \"YjN4eE0VN2XjmkSPuQzDG9ebRjM=\");\n_c = TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["useState","Board","checkBoard","jsxDEV","_jsxDEV","Fragment","_Fragment","TicTacToe","_s","history","setHistory","Array","fill","winning3","setWinners","winner","declareWinner","currentSquares","length","playersTurn","isDraw","statusMessage","handlePlay","i","winningSquares","nextSquares","console","log","winner3","children","fileName","_jsxFileName","lineNumber","columnNumber","squares","onPlay","isComplete","_c","$RefreshReg$"],"sources":["/Users/seth/turing_work/3mod/react-sandbox/src/components/TicTacToe.js"],"sourcesContent":["import { useState } from \"react\";\nimport Board from \"./ticTacToe/Board\";\nimport checkBoard from \"../lib/ticTacToe\";\n\nexport default function TicTacToe() {\n  const [history, setHistory] = useState([Array(9).fill(0)]);\n  const [winning3, setWinners] = useState([]);\n  const [winner, declareWinner] = useState(null);\n\n  const currentSquares = history[history.length - 1];\n  const playersTurn = history.length % 2 ? \"X\" : \"O\";\n  const isDraw = history.length > 9;\n\n  const statusMessage = winner\n    ? `Player - ${winner} - Wins!`\n    : isDraw\n      ? \"GAME OVER - It's a draw\"\n      : `Player - ${playersTurn}`;\n\n  function handlePlay(i) {\n    if (winningSquares.length || currentSquares[i]) return;\n    const nextSquares = [...currentSquares];\n    nextSquares[i] = history.length % 2 ? 1 : -1;\n    console.log(nextSquares);\n    const winning3 = checkBoard(nextSquares);\n    if (winner3) {\n      setWinners(winner);\n      declareWinner();\n    }\n    setHistory([...history, nextSquares]);\n  }\n\n  return (\n    <>\n      <h1>{statusMessage}</h1>\n      <Board\n        squares={currentSquares}\n        onPlay={handlePlay}\n        winning3={winning3}\n        isComplete={winner || isDraw}\n        playersTurn={playersTurn}\n      />\n    </>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,UAAU,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAACW,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACC,QAAQ,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACe,MAAM,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMiB,cAAc,GAAGR,OAAO,CAACA,OAAO,CAACS,MAAM,GAAG,CAAC,CAAC;EAClD,MAAMC,WAAW,GAAGV,OAAO,CAACS,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG;EAClD,MAAME,MAAM,GAAGX,OAAO,CAACS,MAAM,GAAG,CAAC;EAEjC,MAAMG,aAAa,GAAGN,MAAM,GACxB,YAAYA,MAAM,UAAU,GAC5BK,MAAM,GACJ,yBAAyB,GACzB,YAAYD,WAAW,EAAE;EAE/B,SAASG,UAAUA,CAACC,CAAC,EAAE;IACrB,IAAIC,cAAc,CAACN,MAAM,IAAID,cAAc,CAACM,CAAC,CAAC,EAAE;IAChD,MAAME,WAAW,GAAG,CAAC,GAAGR,cAAc,CAAC;IACvCQ,WAAW,CAACF,CAAC,CAAC,GAAGd,OAAO,CAACS,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC5CQ,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;IACxB,MAAMZ,QAAQ,GAAGX,UAAU,CAACuB,WAAW,CAAC;IACxC,IAAIG,OAAO,EAAE;MACXd,UAAU,CAACC,MAAM,CAAC;MAClBC,aAAa,CAAC,CAAC;IACjB;IACAN,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEgB,WAAW,CAAC,CAAC;EACvC;EAEA,oBACErB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAKR;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxB7B,OAAA,CAACH,KAAK;MACJiC,OAAO,EAAEjB,cAAe;MACxBkB,MAAM,EAAEb,UAAW;MACnBT,QAAQ,EAAEA,QAAS;MACnBuB,UAAU,EAAErB,MAAM,IAAIK,MAAO;MAC7BD,WAAW,EAAEA;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA,eACF,CAAC;AAEP;AAACzB,EAAA,CAxCuBD,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}