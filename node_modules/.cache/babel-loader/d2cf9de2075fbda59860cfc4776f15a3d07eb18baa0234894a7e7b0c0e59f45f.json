{"ast":null,"code":"var _jsxFileName = \"/Users/seth/turing_work/3mod/react-sandbox/src/components/TicTacToe.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Board from \"./ticTacToe/Board\";\nimport checkBoard from \"../lib/ticTacToe\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TicTacToe() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(0)]);\n  const [winningSquares, setWinners] = useState([]);\n  const currentSquares = history[history.length - 1];\n  const playersTurn = history.length % 2 ? \"X\" : \"O\";\n  const winner = winningSquares[0];\n  const isDraw = history.length > 9;\n  const message = winner ? `Player - ${winner > 0 ? \"X\" : \"O\"} - Wins!` : isDraw ? \"GAME OVER - It's a draw\" : `Your Turn Player - ${playersTurn}`;\n  function handlePlay(i) {\n    if (currentSquares[i]) return;\n    const nextSquares = [...currentSquares];\n    nextSquares[i] = history.length % 2 ? 1 : -1;\n    const winner = checkBoard(nextSquares);\n    if (winner) setWinners(winner);\n    setHistory([...history, nextSquares]);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      squares: currentSquares,\n      onPlay: handlePlay,\n      winningSquares: winningSquares,\n      complete: winner || isDraw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TicTacToe, \"Qh5l0+Y67extcXhWsO2V5AhfJbE=\");\n_c = TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["useState","useEffect","Board","checkBoard","jsxDEV","_jsxDEV","Fragment","_Fragment","TicTacToe","_s","history","setHistory","Array","fill","winningSquares","setWinners","currentSquares","length","playersTurn","winner","isDraw","message","handlePlay","i","nextSquares","children","fileName","_jsxFileName","lineNumber","columnNumber","squares","onPlay","complete","_c","$RefreshReg$"],"sources":["/Users/seth/turing_work/3mod/react-sandbox/src/components/TicTacToe.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Board from \"./ticTacToe/Board\";\nimport checkBoard from \"../lib/ticTacToe\";\n\nexport default function TicTacToe() {\n  const [history, setHistory] = useState([Array(9).fill(0)]);\n  const [winningSquares, setWinners] = useState([]);\n\n  const currentSquares = history[history.length - 1];\n  const playersTurn = history.length % 2 ? \"X\" : \"O\";\n  const winner = winningSquares[0];\n  const isDraw = history.length > 9;\n\n  const message = winner\n    ? `Player - ${winner > 0 ? \"X\" : \"O\"} - Wins!`\n    : isDraw\n      ? \"GAME OVER - It's a draw\"\n      : `Your Turn Player - ${playersTurn}`;\n\n  function handlePlay(i) {\n    if (currentSquares[i]) return;\n    const nextSquares = [...currentSquares];\n    nextSquares[i] = history.length % 2 ? 1 : -1;\n    const winner = checkBoard(nextSquares);\n    if (winner) setWinners(winner);\n    setHistory([...history, nextSquares]);\n  }\n\n  return (\n    <>\n      <h1>{message}</h1>\n      <Board\n        squares={currentSquares}\n        onPlay={handlePlay}\n        winningSquares={winningSquares}\n        complete={winner || isDraw}\n      />\n    </>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,UAAU,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAACY,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACC,cAAc,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEjD,MAAMgB,cAAc,GAAGN,OAAO,CAACA,OAAO,CAACO,MAAM,GAAG,CAAC,CAAC;EAClD,MAAMC,WAAW,GAAGR,OAAO,CAACO,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG;EAClD,MAAME,MAAM,GAAGL,cAAc,CAAC,CAAC,CAAC;EAChC,MAAMM,MAAM,GAAGV,OAAO,CAACO,MAAM,GAAG,CAAC;EAEjC,MAAMI,OAAO,GAAGF,MAAM,GAClB,YAAYA,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,UAAU,GAC5CC,MAAM,GACJ,yBAAyB,GACzB,sBAAsBF,WAAW,EAAE;EAEzC,SAASI,UAAUA,CAACC,CAAC,EAAE;IACrB,IAAIP,cAAc,CAACO,CAAC,CAAC,EAAE;IACvB,MAAMC,WAAW,GAAG,CAAC,GAAGR,cAAc,CAAC;IACvCQ,WAAW,CAACD,CAAC,CAAC,GAAGb,OAAO,CAACO,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC5C,MAAME,MAAM,GAAGhB,UAAU,CAACqB,WAAW,CAAC;IACtC,IAAIL,MAAM,EAAEJ,UAAU,CAACI,MAAM,CAAC;IAC9BR,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEc,WAAW,CAAC,CAAC;EACvC;EAEA,oBACEnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAKJ;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClBxB,OAAA,CAACH,KAAK;MACJ4B,OAAO,EAAEd,cAAe;MACxBe,MAAM,EAAET,UAAW;MACnBR,cAAc,EAAEA,cAAe;MAC/BkB,QAAQ,EAAEb,MAAM,IAAIC;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA,eACF,CAAC;AAEP;AAACpB,EAAA,CAnCuBD,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}