{"ast":null,"code":"export default function checkBoard(board) {\n  for (const i of [0, 1, 2]) {\n    if (checkRow(i, board)) return checkRow(i, board);\n    if (checkColumn(i, board)) return checkColumn(i, board);\n  }\n  return checkDiagonals(board);\n}\nfunction checkRow(i, board) {\n  const startSquare = i * 3;\n  const indices = [0, 1, 2].map(i => startSquare + i);\n  const winner = checkForWinner(indices, board);\n  if (winner) console.log(\"check row winner:\", winner);\n  return winner ? indices : [];\n}\nfunction checkColumn(i, board) {\n  const startSquare = i;\n  const indices = [0, 1, 2].map(i => 3 * i + startSquare);\n  const winner = checkForWinner(indices, board);\n  if (winner) console.log(\"check column winner:\", winner);\n  return winner ? indices : [];\n}\nfunction checkDiagonals(board) {\n  const diag1 = [0, 4, 8];\n  if (checkForWinner(diag1, board)) {\n    console.log(\"check diag1 winner:\", diag1);\n    return diag1;\n  }\n  const diag2 = [2, 4, 6];\n  if (checkForWinner(diag2, board)) {\n    console.log(\"check diag2 winner:\", diag2);\n    return diag2;\n  }\n  return [];\n}\nfunction checkForWinner(indices, board) {\n  const vals = indices.map(i => board[i]);\n  const winner = Math.abs(addSquares(...vals)) === 3;\n  return winner;\n}\nfunction addSquares(...vals) {\n  console.log(\"vals:\", vals);\n  return vals.reduce((a, b) => a + b, 0);\n}","map":{"version":3,"names":["checkBoard","board","i","checkRow","checkColumn","checkDiagonals","startSquare","indices","map","winner","checkForWinner","console","log","diag1","diag2","vals","Math","abs","addSquares","reduce","a","b"],"sources":["/Users/seth/turing_work/3mod/react-sandbox/src/lib/ticTacToe.js"],"sourcesContent":["export default function checkBoard(board) {\n  for (const i of [0, 1, 2]) {\n    if (checkRow(i, board)) return checkRow(i, board);\n    if (checkColumn(i, board)) return checkColumn(i, board);\n  }\n\n  return checkDiagonals(board);\n}\n\nfunction checkRow(i, board) {\n  const startSquare = i * 3;\n  const indices = [0, 1, 2].map((i) => startSquare + i);\n  const winner = checkForWinner(indices, board);\n  if (winner) console.log(\"check row winner:\", winner);\n  return winner ? indices : [];\n}\n\nfunction checkColumn(i, board) {\n  const startSquare = i;\n  const indices = [0, 1, 2].map((i) => 3 * i + startSquare);\n  const winner = checkForWinner(indices, board);\n  if (winner) console.log(\"check column winner:\", winner);\n  return winner ? indices : [];\n}\n\nfunction checkDiagonals(board) {\n  const diag1 = [0, 4, 8];\n  if (checkForWinner(diag1, board)) {\n    console.log(\"check diag1 winner:\", diag1);\n    return diag1;\n  }\n\n  const diag2 = [2, 4, 6];\n  if (checkForWinner(diag2, board)) {\n    console.log(\"check diag2 winner:\", diag2);\n    return diag2;\n  }\n\n  return [];\n}\n\nfunction checkForWinner(indices, board) {\n  const vals = indices.map((i) => board[i]);\n  const winner = Math.abs(addSquares(...vals)) === 3;\n  return winner;\n}\n\nfunction addSquares(...vals) {\n  console.log(\"vals:\", vals);\n  return vals.reduce((a, b) => a + b, 0);\n}\n"],"mappings":"AAAA,eAAe,SAASA,UAAUA,CAACC,KAAK,EAAE;EACxC,KAAK,MAAMC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;IACzB,IAAIC,QAAQ,CAACD,CAAC,EAAED,KAAK,CAAC,EAAE,OAAOE,QAAQ,CAACD,CAAC,EAAED,KAAK,CAAC;IACjD,IAAIG,WAAW,CAACF,CAAC,EAAED,KAAK,CAAC,EAAE,OAAOG,WAAW,CAACF,CAAC,EAAED,KAAK,CAAC;EACzD;EAEA,OAAOI,cAAc,CAACJ,KAAK,CAAC;AAC9B;AAEA,SAASE,QAAQA,CAACD,CAAC,EAAED,KAAK,EAAE;EAC1B,MAAMK,WAAW,GAAGJ,CAAC,GAAG,CAAC;EACzB,MAAMK,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAEN,CAAC,IAAKI,WAAW,GAAGJ,CAAC,CAAC;EACrD,MAAMO,MAAM,GAAGC,cAAc,CAACH,OAAO,EAAEN,KAAK,CAAC;EAC7C,IAAIQ,MAAM,EAAEE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,MAAM,CAAC;EACpD,OAAOA,MAAM,GAAGF,OAAO,GAAG,EAAE;AAC9B;AAEA,SAASH,WAAWA,CAACF,CAAC,EAAED,KAAK,EAAE;EAC7B,MAAMK,WAAW,GAAGJ,CAAC;EACrB,MAAMK,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAEN,CAAC,IAAK,CAAC,GAAGA,CAAC,GAAGI,WAAW,CAAC;EACzD,MAAMG,MAAM,GAAGC,cAAc,CAACH,OAAO,EAAEN,KAAK,CAAC;EAC7C,IAAIQ,MAAM,EAAEE,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,MAAM,CAAC;EACvD,OAAOA,MAAM,GAAGF,OAAO,GAAG,EAAE;AAC9B;AAEA,SAASF,cAAcA,CAACJ,KAAK,EAAE;EAC7B,MAAMY,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvB,IAAIH,cAAc,CAACG,KAAK,EAAEZ,KAAK,CAAC,EAAE;IAChCU,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEC,KAAK,CAAC;IACzC,OAAOA,KAAK;EACd;EAEA,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvB,IAAIJ,cAAc,CAACI,KAAK,EAAEb,KAAK,CAAC,EAAE;IAChCU,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEE,KAAK,CAAC;IACzC,OAAOA,KAAK;EACd;EAEA,OAAO,EAAE;AACX;AAEA,SAASJ,cAAcA,CAACH,OAAO,EAAEN,KAAK,EAAE;EACtC,MAAMc,IAAI,GAAGR,OAAO,CAACC,GAAG,CAAEN,CAAC,IAAKD,KAAK,CAACC,CAAC,CAAC,CAAC;EACzC,MAAMO,MAAM,GAAGO,IAAI,CAACC,GAAG,CAACC,UAAU,CAAC,GAAGH,IAAI,CAAC,CAAC,KAAK,CAAC;EAClD,OAAON,MAAM;AACf;AAEA,SAASS,UAAUA,CAAC,GAAGH,IAAI,EAAE;EAC3BJ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEG,IAAI,CAAC;EAC1B,OAAOA,IAAI,CAACI,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,EAAE,CAAC,CAAC;AACxC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}